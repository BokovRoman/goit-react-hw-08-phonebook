{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js"],"names":["module","exports","getFilterValue","state","contacts","filter","getContacts","items","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","INITIAL_STATE","number","ContactForm","handleChange","target","value","setState","handleSubmit","e","preventDefault","includesContact","props","find","onSubmit","reset","alert","this","className","styles","form","label","input","type","pattern","title","required","onChange","button","Component","connect","dispatch","a","actions","axios","post","data","message","addContact","onDeleteContact","id","delete","status","removeContact","list","map","item","onClick","changeFilter","ContactsView","fetchContacts","Section","get"],"mappings":"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","file":"static/js/contacts-page.ab9d4330.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__w5i2s\",\"label\":\"ContactForm_label__2_qW9\",\"button\":\"ContactForm_button__2pshW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3rrXk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1sC4M\",\"input\":\"Filter_input__3KBF_\"};","import { createSelector } from '@reduxjs/toolkit';\r\nexport const getFilterValue = state => state.contacts.filter;\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilterValue],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styles from './ContactForm.module.css';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  // handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   const { name, number } = this.state;\r\n  //   this.props.onSubmit(name, number);\r\n  //   this.reset();\r\n  // };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const { contacts } = this.props;\r\n    const includesContact = contacts.find((contact) => contact.name === name);\r\n\r\n    if (!includesContact) {\r\n      this.props.onSubmit(name, number);\r\n      this.reset();\r\n      return;\r\n    }\r\n\r\n    alert(`${includesContact.name} is already in contacts`);\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n            <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import axios from 'axios';\r\nimport * as actions from './contacts-actions';\r\n\r\nexport const fetchContactsRequest = () => async dispatch => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(actions.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.removeContactError(error.message));\r\n  }\r\n\r\n  //   axios\r\n  //     .get('/contacts')\r\n  //     .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\r\n  //     .catch(error => actions.fetchContactsError(error));\r\n};\r\n\r\nexport const addContact = (name, number) => async dispatch => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(actions.addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(actions.addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.addContactError(error.message));\r\n  }\r\n\r\n  //   axios\r\n  //     .post('/contacts', contact)\r\n  //     .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n  //     .catch(error => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nexport const removeContact = id => async dispatch => {\r\n  dispatch(actions.removeContactRequest());\r\n\r\n  try {\r\n    const response = await axios.delete(`/contacts/${id}`);\r\n\r\n    if (response.status === 200) {\r\n      dispatch(actions.removeContactSuccess(id));\r\n    }\r\n  } catch (error) {\r\n    dispatch(actions.removeContactError(error.message));\r\n  }\r\n\r\n  //   axios\r\n  //     .delete(`/contacts/${id}`)\r\n  //     .then(() => dispatch(actions.removeContactSuccess(id)))\r\n  //     .catch(error => dispatch(actions.removeContactError(error)));\r\n};","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './ContactList.module.css';\r\n\r\nimport { removeContact } from '../../redux/contacts/contacts-operations';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\n\r\nconst ContactList = ({contacts, onDeleteContact}) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            {contacts.map(({id,name,number})=> (\r\n                    <li key={id} className={styles.item}>\r\n                    <p>{name}: {number}</p>\r\n                    <button className={styles.button} type=\"button\"\r\n                    onClick={() => onDeleteContact(id)}>Delete</button>\r\n                    </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n        .isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(removeContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilterValue } from '../../redux/contacts/contacts-selectors';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n        className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: getFilterValue(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './ContactsView.scss';\r\nimport Section from '../../components/Section/Section';\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\nimport ContactList from '../../components/ContactList/ContactList';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport { fetchContactsRequest } from '../../redux/contacts/contacts-operations';\r\n\r\nclass ContactsView extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() {\r\n    return (\r\n      <Section>\r\n        <div className=\"contacts-wrapper\">\r\n          <div className=\"contacts__add-container\">\r\n            <p className=\"contacts__add-hint\">\r\n              Enter name and phone number to add a new contact\r\n            </p>\r\n            <ContactForm />\r\n          </div>\r\n          <div className=\"contacts__list-container\">\r\n            <Filter />\r\n            <ContactList />\r\n          </div>\r\n        </div>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(fetchContactsRequest()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsView);"],"sourceRoot":""}