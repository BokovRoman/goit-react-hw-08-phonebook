{"version":3,"sources":["redux/contacts/contacts-actions.js","components/Loader/Loader.js","components/Navigation/Navigation.js","components/UserMenu/user.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","redux/common/common-selectors.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/common/common-reducer.js","redux/store.js","index.js","routes.js","redux/auth/auth-selectors.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/Section/Section.module.css","components/Section/Section.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","reactLoader","className","type","color","secondaryColor","height","width","styles","link","display","textDecoration","padding","fontWeight","fontSize","activeLink","textShadow","connect","state","isAuthenticated","getIsAuthenticated","to","routes","home","exact","style","activeStyle","contacts","container","alignItems","avatar","marginRight","name","UserMenu","onLogout","src","alt","onClick","defaultProps","defaultAvatar","mapDispatchToProps","logOut","getUserName","AuthNav","register","login","header","justifyContent","borderBottom","getIsLoading","loading","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","isLoading","Section","fallback","path","PrivateRoute","getCurrentUser","items","createReducer","contactsActions","_","payload","filter","contact","id","combineReducers","initialUserState","email","user","authActions","token","setError","error","loadingReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","document","getElementById","getIsError","Boolean","axios","defaults","baseURL","headers","common","Authorization","credentials","dispatch","a","post","data","message","logIn","getState","persistedToken","get","removeError","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","module","exports","title","children","text","protoTypes","PropTypes","string","isRequired"],"mappings":"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","file":"static/js/main.ac22e41c.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/AddContactRequest');\r\nexport const addContactSuccess = createAction('contacts/AddContactSuccess');\r\nexport const addContactError = createAction('contacts/AddContactError');\r\n\r\nexport const removeContactRequest = createAction('contacts/RemoveContactRequest');\r\nexport const removeContactSuccess = createAction('contacts/RemoveContactSuccess');\r\nexport const removeContactError = createAction('contacts/RemoveContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","import './Loader.scss';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst reactLoader = () => (\r\n  <div className=\"backdrop\">\r\n    <div className=\"Loader\">\r\n      <Loader\r\n        type=\"MutatingDots\"\r\n        color=\"#44bec7\"\r\n        secondaryColor=\"#4e777a\"\r\n        height={100}\r\n        width={100}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default reactLoader;","import { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport routes from '../../routes';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    fontSize: '20px',\r\n    color: '#2a2a2a',\r\n  },\r\n  activeLink: {\r\n    color: '#fff',\r\n    textShadow:\r\n      '0 0 20px #54f0fa, 0 0 30px #54f0fa, 0 0 40px #54f0fa, 3px -1px 1px #2a2a2a',\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink\r\n      to={routes.home}\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Main\r\n    </NavLink>\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to={routes.contacts}\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);","export default __webpack_public_path__ + \"static/media/user.1dabdb24.png\";","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './UserMenu.scss';\r\nimport { getUserName } from '../../redux/auth/auth-selectors';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport defaultAvatar from './user.png';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt={name} width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button className=\"user-menu\" type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nUserMenu.defaultProps = {\r\n  avatar: defaultAvatar,\r\n  onLogout: () => null,\r\n};\r\n\r\nUserMenu.propTypes = {\r\n  avatar: PropTypes.any,\r\n  name: PropTypes.string.isRequired,\r\n  onLogout: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  name: getUserName(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import { NavLink } from 'react-router-dom';\r\n\r\nimport routes from '../../routes';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    fontSize: '20px',\r\n    color: '#2a2a2a',\r\n  },\r\n  activeLink: {\r\n    color: '#fff',\r\n    textShadow:\r\n      '-1px 6px 15px rgba(84,240,250,0.76), 5px 5px 1px rgba(100,240,250,0.4)',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to={routes.register}\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Sign Up\r\n    </NavLink>\r\n    <NavLink\r\n      to={routes.login}\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Log In\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nAppBar.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(AppBar);","export const getIsLoading = state => state.loading;","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nPublicRoute.propTypes = {\r\n  component: PropTypes.object.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  redirectTo: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPublicRoute.propTypes = {\r\n  component: PropTypes.object.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  redirectTo: PropTypes.string.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component } from 'react';\nimport { Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Loader from './components/Loader/Loader';\nimport Section from './components/Section/Section';\nimport AppBar from './components/AppBar/AppBar';\nimport routes from './routes';\nimport { getIsLoading } from './redux/common/common-selectors';\nimport { getCurrentUser } from './redux/auth/auth-operations';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView/HomeView' /* webpackChunkName: \"home-page\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"register-page\" */),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"login-page\" */),\n);\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"contacts-page\" */),\n);\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    const { isLoading } = this.props;\n    return (\n      <Section>\n        {isLoading && <Loader />}\n\n        <AppBar />\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <Route exact path={routes.home} component={HomeView} />\n            <PublicRoute\n              path={routes.register}\n              restricted\n              redirectTo={routes.contacts}\n              component={RegisterView}\n            />\n            <PublicRoute\n              path={routes.login}\n              restricted\n              redirectTo={routes.contacts}\n              component={LoginView}\n            />\n            <PrivateRoute\n              path={routes.contacts}\n              component={ContactsView}\n              redirectTo={routes.login}\n            />\n          </Switch>\n        </Suspense>\n      </Section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: getIsLoading(state),\n});\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: getCurrentUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as contactsActions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [contactsActions.addContactSuccess]: (state, { payload }) => [\r\n    ...state,\r\n    payload,\r\n  ],\r\n  [contactsActions.removeContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport * as authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.loginError]: setError,\r\n  [authActions.registerError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n  [authActions.removeError]: () => null,\r\n});\r\n\r\nexport default combineReducers({ user, isAuthenticated, token, error });","import { createReducer } from '@reduxjs/toolkit';\r\nimport * as contactsActions from '../contacts/contacts-actions';\r\nimport * as authActions from '../auth/auth-actions';\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [contactsActions.fetchContactsRequest]: () => true,\r\n  [contactsActions.fetchContactsSuccess]: () => false,\r\n  [contactsActions.fetchContactsError]: () => false,\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactError]: () => false,\r\n  [contactsActions.removeContactRequest]: () => true,\r\n  [contactsActions.removeContactSuccess]: () => false,\r\n  [contactsActions.removeContactError]: () => false,\r\n  [authActions.registerRequest]: () => true,\r\n  [authActions.registerSuccess]: () => false,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginRequest]: () => true,\r\n  [authActions.loginSuccess]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.logoutRequest]: () => true,\r\n  [authActions.logoutSuccess]: () => false,\r\n  [authActions.logoutError]: () => false,\r\n  [authActions.getCurrentUserRequest]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n});\r\n\r\nexport default loadingReducer;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n// import logger from 'redux-logger';\r\n\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\nimport loadingReducer from './common/common-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'token',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n    loading: loadingReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\n// import 'modern-normalize/modern-normalize.css';\n\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport './styles/base.scss';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  // </React.StrictMode>\n  document.getElementById('root'),\n);","const routes = {\r\n  home: '/',\r\n  register: '/register',\r\n  login: '/login',\r\n  contacts: '/contacts',\r\n};\r\n\r\nexport default routes;","export const getIsAuthenticated = state => state.auth.isAuthenticated;\r\nexport const getUserName = state => state.auth.user.name;\r\nexport const getIsError = state => Boolean(state.auth.error);","import axios from 'axios';\r\n\r\nimport * as authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    dispatch(authActions.registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nexport const logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    dispatch(authActions.loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nexport const logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport const removeError = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { error: isError },\r\n  } = getState();\r\n\r\n  if (isError) {\r\n    dispatch(authActions.removeError());\r\n  }\r\n};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport const removeError = createAction('auth/removeError');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Section_text__avW66\"};","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Section.module.css';\r\n\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <h2 className={styles.text}>{title}\r\n            </h2>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nSection.protoTypes = {\r\n    title:PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Section;"],"sourceRoot":""}